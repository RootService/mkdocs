use strict;
$myprogram_name = $0;
$myhostname = 'mail.example.com';
$mydomain = 'example.com';
$daemon_user = 'vscan';
$daemon_group = 'vscan';
$MYHOME = '/var/amavis';
$TEMPBASE = "$MYHOME/tmp";
$ENV{TMPDIR} = $TEMPBASE;
$db_home = "$MYHOME/db";
$pid_file  = "$MYHOME/var/amavisd.pid";
$lock_file = "$MYHOME/var/amavisd.lock";
$max_servers = 2;
$enable_db = 0;
$nanny_details_level = 2;
@local_domains_maps = 1;
@mynetworks = qw(
    127.0.0.0/8 [::1]/128
    10.0.0.0/8 [fe80::]/10
    __IPV4ADDR__/32 [__IPV6ADDR__]/64
);
$log_level = 3;
$logfile  = "$MYHOME/var/amavisd.log";
$log_templ = $log_verbose_templ;
$sa_debug = 1;
$enable_dkim_verification = 1;
$myauthservid = $myhostname;
$enable_dkim_signing = 0;
dkim_key('example.com', "20250426", "$MYHOME/db/keys/example.com/20250426.pem");
@dkim_signature_options_bysender_maps = ({
    "example.com"  => { d => "example.com", a => 'rsa-sha256', c => 'relaxed/simple', ttl => 10*24*3600 },
    '.'            => { d => 'example.com', a => 'rsa-sha256', c => 'relaxed/simple', ttl => 30*24*3600 },
});
for (qw(Received))                       { $signed_header_fields{lc $_} = 0 }
for (qw(Accept-Language Archived-At Auto-Submitted Content-Alternative
        Content-Base Content-Class Content-Description Content-Disposition
        Content-Duration Content-Features Content-Id Content-Language
        Content-Location Content-MD5 Content-Transfer-Encoding In-Reply-To
        List-Archive List-Help List-Id List-Owner List-Post List-Subscribe
        List-Unsubscribe Message-Context Message-ID MIME-Version
        Organisation Organization Original-Message-ID Pics-Label
        Precedence References Reply-To Resent-Date Resent-From
        Resent-Message-ID Resent-Sender Sensitivity Solicitation
        User-Agent VBR-Info X-Mailer))   { $signed_header_fields{lc $_} = 1 }
for (qw(From Date Subject Content-Type)) { $signed_header_fields{lc $_} = 2 }
$unix_socketname = "$MYHOME/var/amavisd.sock";
$inet_socket_port = [ 10024, 10026 ];
$inet_socket_bind = [ '127.0.0.1', '[::1]' ];
@inet_acl = qw( 127.0.0.1 [::1] );
$smtp_connection_cache_enable = 0;
$localhost_name = $myhostname;
$forward_method = 'smtp:[127.0.0.1]:10025';
$final_virus_destiny = D_DISCARD;
$final_banned_destiny = D_DISCARD;
$final_spam_destiny   = D_PASS;
$final_bad_header_destiny = D_PASS;
$virus_quarantine_method = 'sql:';
$spam_quarantine_method = 'sql:';
$banned_files_quarantine_method = 'sql:';
$bad_header_quarantine_method = 'sql:';
$QUARANTINEDIR = '/var/virusmails';
$quarantine_subdir_levels = 2;
$mailfrom_to_quarantine = '';
$notify_method = 'smtp:[127.0.0.1]:10025';
$virus_admin = "virusalert\@$mydomain";
$mailfrom_notify_admin = "virusalert\@$mydomain";
$mailfrom_notify_recip = "virusalert\@$mydomain";
$mailfrom_notify_spamadmin = "spam.police\@$mydomain";
$defang_virus = 1;
$defang_banned = 1;
$altermime = '/usr/local/bin/altermime';
@altermime_args_disclaimer = qw(--disclaimer=/usr/local/etc/postfix/disclaimer/_OPTION_.txt --disclaimer-html=/usr/local/etc/postfix/disclaimer/_OPTION_.txt --force-for-bad-html);
@disclaimer_options_bysender_maps = ({
  '.' => 'default',
},);
$undecipherable_subject_tag = undef;
$sa_spam_modifies_subj = 1;
$sa_spam_subject_tag = '[SPAM] ';
$recipient_delimiter = '+';
@addr_extension_virus_maps = ('virus');
@addr_extension_banned_maps = ('banned');
@addr_extension_spam_maps = ('spam');
@addr_extension_bad_header_maps = ('badh');
$bypass_decode_parts = 1;
@keep_decoded_original_maps = (new_RE(
  qr'^MAIL$',
  qr'^MAIL-UNDECIPHERABLE$',
  qr'^(ASCII(?! cpio)|text|uuencoded|xxencoded|binhex)'i,
));
$MAXLEVELS = 14;
$MAXFILES = 3000;
$MIN_EXPANSION_QUOTA = 100*1024;
$MAX_EXPANSION_QUOTA = 500*1024*1024;
$path = '/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/usr/bin:/bin';
@decoders = (
  ['mail', \&do_mime_decode],
  ['F',    \&do_uncompress, ['unfreeze', 'freeze -d', 'melt', 'fcat'] ],
  ['Z',    \&do_uncompress, ['uncompress', 'gzip -d', 'zcat'] ],
  ['gz',   \&do_uncompress, 'gzip -d'],
  ['gz',   \&do_gunzip],
  ['bz2',  \&do_uncompress, 'bzip2 -d'],
  ['xz',   \&do_uncompress,
           ['xzdec', 'xz -dc', 'unxz -c', 'xzcat'] ],
  ['lzma', \&do_uncompress,
           ['lzmadec', 'xz -dc --format=lzma',
            'lzma -dc', 'unlzma -c', 'lzcat', 'lzmadec'] ],
  ['lrz',  \&do_uncompress,
           ['lrzip -q -k -d -o -', 'lrzcat -q -k'] ],
  ['lzo',  \&do_uncompress, 'lzop -d'],
  ['lzip', \&do_uncompress, ['lzip -d'] ],
  ['lz4',  \&do_uncompress, ['lz4c -d'] ],
  ['rpm',  \&do_uncompress, ['rpm2cpio.pl', 'rpm2cpio'] ],
  [['cpio','tar'], \&do_pax_cpio, ['pax', 'gcpio', 'cpio'] ],
  ['deb',  \&do_ar, 'ar'],
  ['rar',  \&do_unrar, ['unrar', 'rar'] ],
  ['arj',  \&do_unarj, ['unarj', 'arj'] ],
  ['arc',  \&do_arc,   ['nomarch', 'arc'] ],
  ['zoo',  \&do_zoo,   ['zoo', 'unzoo'] ],
  ['doc',  \&do_ole,   'ripole'],
  ['cab',  \&do_cabextract, 'cabextract'],
  ['tnef', \&do_tnef_ext, 'tnef'],
  ['tnef', \&do_tnef],
  [['zip','kmz'], \&do_7zip,  ['7za', '7zz', '7z'] ],
  [['zip','kmz'], \&do_unzip],
  ['zst',  \&do_uncompress, ['unzstd'] ],
  [[qw(7z lzma xz)],
           \&do_7zip,  ['7zr', '7za', '7zz', '7z'] ],  
  [[qw(bz2 Z cab gz tar zst)],
           \&do_7zip,  ['7za', '7zz', '7z'] ],
  [[qw(arj cpio deb iso jar lha rar rpm swf)],
           \&do_7zip,  ['7zz', '7z'] ],
  ['exe',  \&do_executable, ['unrar','rar'], 'lha', ['unarj','arj'] ],
);
$pax = 'pax';
@av_scanners = (
  ['ClamAV-clamdscan', 'clamdscan', "--fdpass --stdout --no-summary {}",
    [0], qr/:.*\sFOUND$/m, qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],
);
@av_scanners_backup = (
  ['ClamAV-clamscan', 'clamscan',
    "--stdout --no-summary -r --tempdir=$TEMPBASE {}",
    [0], qr/:.*\sFOUND$/m, qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],
);
@virus_name_to_spam_score_maps =(new_RE(
  [ qr'^Structured\.(SSN|CreditCardNumber)\b'            => 0.1 ],
  [ qr'^(Heuristics\.)?Phishing\.'                       => 0.1 ],
  [ qr'^(Email|HTML)\.Phishing\.(?!.*Sanesecurity)'      => 0.1 ],
  [ qr'^Sanesecurity\.(Malware|Badmacro|Foxhole|Rogue|Trojan)\.' => undef ],
  [ qr'^Sanesecurity\.Foxhole\.Zip_exe'                  => 0.1 ], # F.P.
  [ qr'^Sanesecurity\.MalwareHash\.'                     => undef ],
  [ qr'^Sanesecurity.TestSig_'                           => undef ],
  [ qr'^Sanesecurity\.'                                  => 0.1 ],
  [ qr'^Email\.Spam\.Bounce(\.[^., ]*)*\.Sanesecurity\.' => 0   ],
  [ qr'^Email\.Spammail\b'                               => 0.1 ],
  [ qr'^MSRBL-(Images|SPAM)\b'                           => 0.1 ],
  [ qr'^VX\.Honeypot-SecuriteInfo\.com\.Joke'            => 0.1 ],
  [ qr'^VX\.not-virus_(Hoax|Joke)\..*-SecuriteInfo\.com(\.|\z)' => 0.1 ],
  [ qr'^Email\.Spam.*-SecuriteInfo\.com(\.|\z)'          => 0.1 ],
  [ qr'^Safebrowsing\.'                                  => 0.1 ],
  [ qr'^winnow\.(Exploit|Trojan|malware)\.'              => undef ],
  [ qr'^winnow\.(botnet|compromised|trojan)'             => undef ],
  [ qr'^winnow\.(exe|ms|JS)\.'                           => undef ],
  [ qr'^winnow\.(phish|spam)\.'                          => 3.0 ],
  [ qr'^winnow\.'                                        => 0.1 ],
  [ qr'^INetMsg\.SpamDomain'                             => 0.1 ],
  [ qr'^Doppelstern\.(Spam|Scam|Phishing|Junk|Lott|Loan)'=> 0.1 ],
  [ qr'^Bofhland\.Malware\.'                             => undef ],
  [ qr'^BofhlandMWFile'                                  => undef ],
  [ qr'^Bofhland\.Phishing\.'                            => 3.0 ],
  [ qr'^Bofhland\.'                                      => 0.1 ],
  [ qr'^ScamNailer\.'                                    => 0.1 ],
  [ qr'^HTML/Bankish'                                    => 0.1 ],
  [ qr'^Porcupine\.(Malware|Trojan)\.'                   => undef ],
  [ qr'^Porcupine\.(Junk|Spammer)\.'                     => 3.0 ],
  [ qr'^Porcupine\.Phishing\.'                           => 3.0 ],
  [ qr'^Porcupine\.'                                     => 0.01 ],
  [ qr'^PhishTank\.Phishing\.'                           => 3.0 ],
  [ qr'^SecuriteInfo\.com\.Spam'                         => 3.0 ],
  [ qr'(-)?SecuriteInfo\.com(\.|\z)'                     => undef ],
  [ qr'^MBL_NA\.UNOFFICIAL'                              => 0.1 ],
  [ qr'^MBL_'                                            => undef ],
));
%banned_rules = (
  'ALLOW_MS_OFFICE'   => new_RE([qr'.\.(doc|docx|xls|xlsx|ppt|pptx)$'i => 0]),
  'ALLOW_MS_WORD'     => new_RE([qr'.\.(doc|docx)$'i => 0]),
  'ALLOW_MS_EXCEL'    => new_RE([qr'.\.(xls|xlsx)$'i => 0]),
  'ALLOW_MS_PPT'      => new_RE([qr'.\.(ppt|pptx)$'i => 0]),
  'DEFAULT'           => $banned_filename_re,
);
$banned_filename_re = new_RE(
  qr'^\.(exe-ms|dll)$',
  [ qr'^\.(rpm|cpio|tar)$' => 0 ],
  qr'.\.(pif|scr)$'i,
  qr'^application/x-msdownload$'i,
  qr'^application/x-msdos-program$'i,
  qr'^application/hta$'i,
  qr'^(?!cid:).*\.[^./]*[A-Za-z][^./]*\.\s*(exe|vbs|pif|scr|bat|cmd|com|cpl|dll)[.\s]*$'i,
  qr'.\.(exe|vbs|pif|scr|cpl)$'i,
);
$banned_namepath_re = new_RE(
  [qr'T=x-(msdownload|msdos-program|msmetafile)(,|\t)'xmi => 'DISCARD'],
  [qr'T=(hta)(,|\t)'xmi => 'DISCARD'],
  [qr'T=(9|386|LeChiffre|aaa|abc|aepl|ani|aru|atm|aut|b64|bat|bhx|bkd|blf|bll|bmw|boo|bps|bqf|breaking_bad|buk|bup|bxz|cc|ccc|ce0|ceo|cfxxe|chm|cih|cla|class|cmd|com|cpl|crinf|crjoker|crypt|cryptolocker|cryptowall|ctbl|cxq|cyw|dbd|delf|dev|dlb|dli|dll|dllx|dom|drv|dx|dxz|dyv|dyz|ecc|exe|exe-ms|exe1|exe_renamed|exx|ezt|ezz|fag|fjl|fnr|fuj|good|gzquar|hlp|hlw|hqx|hsq|hts|iva|iws|jar|js|kcd|keybtc@inbox_com|let|lik|lkh|lnk|locky|lok|lol!|lpaq5|magic|mfu|micro|mim|mjg|mjz|nls|oar|ocx|osa|ozd|pcx|pgm|php2|php3|pid|pif|plc|pr|pzdc|qit|qrn|r5a|rhk|rna|rsc_tmp|s7p|scr|shs|ska|smm|smtmp|sop|spam|ssy|swf|sys|tko|tps|tsa|tti|ttt|txs|upa|uu|uue|uzy|vb|vba|vbe|vbs|vbx|vexe|vxd|vzr|wlpginstall|ws|wsc|wsf|wsh|wss|xdu|xir|xlm|xlv|xnt|xnxx|xtbl|xxe|xxx|xyz|zix|zvz|zzz)(,|\t)'xmi => 'DISCARD'],
  [qr'N=.*\.(9|386|LeChiffre|aaa|abc|aepl|ani|aru|atm|aut|b64|bat|bhx|bkd|blf|bll|bmw|boo|bps|bqf|breaking_bad|buk|bup|bxz|cc|ccc|ce0|ceo|cfxxe|chm|cih|cla|class|cmd|com|cpl|crinf|crjoker|crypt|cryptolocker|cryptowall|ctbl|cxq|cyw|dbd|delf|dev|dlb|dli|dll|dllx|dom|drv|dx|dxz|dyv|dyz|ecc|exe|exe-ms|exe1|exe_renamed|exx|ezt|ezz|fag|fjl|fnr|fuj|good|gzquar|hlp|hlw|hqx|hsq|hts|iva|iws|jar|js|kcd|keybtc@inbox_com|let|lik|lkh|lnk|locky|lok|lol!|lpaq5|magic|mfu|micro|mim|mjg|mjz|nls|oar|ocx|osa|ozd|pcx|pgm|php2|php3|pid|pif|plc|pr|pzdc|qit|qrn|r5a|rhk|rna|rsc_tmp|s7p|scr|shs|ska|smm|smtmp|sop|spam|ssy|swf|sys|tko|tps|tsa|tti|ttt|txs|upa|uu|uue|uzy|vb|vba|vbe|vbs|vbx|vexe|vxd|vzr|wlpginstall|ws|wsc|wsf|wsh|wss|xdu|xir|xlm|xlv|xnt|xnxx|xtbl|xxe|xxx|xyz|zix|zvz|zzz)$'xmi => 'DISCARD'],
);
@bypass_virus_checks_maps = (0);
$allowed_header_tests{'multiple'} = 0;
$allowed_header_tests{'missing'} = 0;
$helpers_home = "$MYHOME/var";
$sa_mail_body_size_limit = 400*1024;
@bypass_spam_checks_maps  = (0);
$sa_tag_level_deflt  = -999;
$sa_tag2_level_deflt = 6.2;
$sa_kill_level_deflt = 6.9;
$sa_dsn_cutoff_level = 10;
$sa_crediblefrom_dsn_cutoff_level = 18;
$penpals_threshold_high = $sa_kill_level_deflt;
@score_sender_maps = ({
  '.' => [  # the _first_ matching sender determines the score boost
   new_RE(  # regexp-type lookup table, just happens to be all soft-blacklist
    [qr'^(bulkmail|offers|cheapbenefits|earnmoney|foryou)@'i         => 5.0],
    [qr'^(greatcasino|investments|lose_weight_today|market\.alert)@'i=> 5.0],
    [qr'^(money2you|MyGreenCard|new\.tld\.registry|opt-out|opt-in)@'i=> 5.0],
    [qr'^(optin|saveonlsmoking2002k|specialoffer|specialoffers)@'i   => 5.0],
    [qr'^(stockalert|stopsnoring|wantsome|workathome|yesitsfree)@'i  => 5.0],
    [qr'^(your_friend|greatoffers)@'i                                => 5.0],
    [qr'^(inkjetplanet|marketopt|MakeMoney)\d*@'i                    => 5.0],
   ),
   { # a hash-type lookup table (associative array)
     'nobody@cert.org'                        => -3.0,
     'cert-advisory@us-cert.gov'              => -3.0,
     'owner-alert@iss.net'                    => -3.0,
     'slashdot@slashdot.org'                  => -3.0,
     'securityfocus.com'                      => -3.0,
     'ntbugtraq@listserv.ntbugtraq.com'       => -3.0,
     'security-alerts@linuxsecurity.com'      => -3.0,
     'mailman-announce-admin@python.org'      => -3.0,
     'amavis-user-admin@lists.sourceforge.net'=> -3.0,
     'amavis-user-bounces@lists.sourceforge.net' => -3.0,
     'spamassassin.apache.org'                => -3.0,
     'notification-return@lists.sophos.com'   => -3.0,
     'owner-postfix-users@postfix.org'        => -3.0,
     'owner-postfix-announce@postfix.org'     => -3.0,
     'owner-sendmail-announce@lists.sendmail.org'   => -3.0,
     'sendmail-announce-request@lists.sendmail.org' => -3.0,
     'donotreply@sendmail.org'                => -3.0,
     'ca+envelope@sendmail.org'               => -3.0,
     'noreply@freshmeat.net'                  => -3.0,
     'owner-technews@postel.acm.org'          => -3.0,
     'ietf-123-owner@loki.ietf.org'           => -3.0,
     'cvs-commits-list-admin@gnome.org'       => -3.0,
     'rt-users-admin@lists.fsck.com'          => -3.0,
     'clp-request@comp.nus.edu.sg'            => -3.0,
     'surveys-errors@lists.nua.ie'            => -3.0,
     'emailnews@genomeweb.com'                => -5.0,
     'yahoo-dev-null@yahoo-inc.com'           => -3.0,
     'returns.groups.yahoo.com'               => -3.0,
     'clusternews@linuxnetworx.com'           => -3.0,
     lc('lvs-users-admin@LinuxVirtualServer.org')    => -3.0,
     lc('owner-textbreakingnews@CNNIMAIL12.CNN.COM') => -5.0,
     'sender@example.net'                     =>  3.0,
     '.example.net'                           =>  1.0,
   },
  ],
});
@lookup_sql_dsn = ([ 'DBI:Pg:database=mail_prefs;host=127.0.0.1;port=5432', 'vscan', '__PASSWORD__' ]);
@storage_sql_dsn = ([ 'DBI:Pg:database=mail_log;host=127.0.0.1;port=5432', 'vscan', '__PASSWORD__' ]);
$timestamp_fmt_mysql = 1;
$sql_allow_8bit_address = 1;
%defang_maps_by_ccat = (
  CC_VIRUS,       sub { c('defang_virus') },
  CC_BANNED,      sub { c('defang_banned') },
  CC_UNCHECKED,   sub { c('defang_undecipherable') },
  CC_SPAM,        sub { c('defang_spam') },
  CC_SPAMMY,      sub { c('defang_spam') },
  CC_BADH.',3',   1,
  CC_BADH.',5',   1,
  CC_BADH.',6',   1,
  CC_UNCHECKED.',3', 1,
  CC_BADH,        sub { c('defang_bad_header') },
);
%admin_maps_by_ccat = (
  CC_VIRUS,       sub { ca('virus_admin_maps') },
  CC_BANNED,      sub { ca('banned_admin_maps') },
  CC_SPAM,        sub { ca('spam_admin_maps') },
  CC_BADH,        sub { ca('bad_header_admin_maps') },
);
$policy_bank{'MYNETS'} = {
  originating => 1,
  os_fingerprint_method => undef,
};
$interface_policy{'10026'} = 'ORIGINATING';
$policy_bank{'ORIGINATING'} = {
    originating => 1,
    allow_disclaimers => 1,
    enable_dkim_signing => 1,
    warnbadhsender => 1,
    forward_method => 'smtp:[127.0.0.1]:10027',
    smtpd_discard_ehlo_keywords => ['8BITMIME'],
    bypass_banned_checks_maps => [1],
    terminate_dsn_on_notify_success => 0,
};
$interface_policy{'SOCK'} = 'AM.PDP-SOCK';
$policy_bank{'AM.PDP-SOCK'} = {
  protocol => 'AM.PDP',
  auth_required_release => 0,
};
1;  # insure a defined return value